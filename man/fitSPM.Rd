% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spm.r
\name{fitSPM}
\alias{fitSPM}
\title{fitSPM fits a surplus production model}
\usage{
fitSPM(
  pars,
  fish,
  schaefer = TRUE,
  maxiter = 1000,
  funk = simpspm,
  funkone = FALSE,
  hess = FALSE,
  steptol = 1e-06
)
}
\arguments{
\item{pars}{the initial parameter values to start the search for the 
optimum. These need to be on the log-scale (log-transformed)}

\item{fish}{the matrix containing the fishery data 'year', 'catch', and
'cpue' as a minimum.}

\item{schaefer}{if TRUE, the default, then simpspm is used to fit the
Schaefer model. If FALSE then the Fox model is fitted setting the p
parameter to 1e-08 inside simpspm.}

\item{maxiter}{the maximum number of iterations to be used nlm}

\item{funk}{the function used to generate the predicted cpue}

\item{funkone}{default = FALSE. Means use negLL. If TRUE then use negLL1
which is identical to negLL but constrains the first parameter > 0}

\item{hess}{default is FALSE; should one calculate the hessian matrix?}

\item{steptol}{the internal step tolerance, required in case nlm reports
the steptol as being too small. defaults to 1e-06}
}
\value{
an nlm output object as a list
}
\description{
fitSPM fits a surplus production model (either Schaefer or 
    Fox) by applying first optim (using Nelder-Mead) and then nlm. Being 
    automated it is recommended that this only be used once plausible 
    initial parameters have been identified (through rules of thumb or 
    trial and error). It uses negLL to apply a negative log-likelihood, 
    assuming log-normal residual errors. The output object is the usual 
    object output from nlm, which can be neatly printed using outfit.
    The $estimate values can be used in plotspmmod to plot the 
    outcome, or in spmboot to conduct bootstrap sampling of the residuals 
    from the CPUE model fit to gain an appreciation of any uncertainty 
    in the analysis. It uses the magnitude function to set the values of 
    the parscale parameters.
}
\examples{
\dontrun{
 data(dataspm)
 pars <- log(c(r=0.2,K=6000,Binit=2800,sigma=0.2))
 ans <- fitSPM(pars,fish=dataspm,schaefer=TRUE,maxiter=1000)
 outfit(ans)   # Schaefer model
 ansF <- fitSPM(pars,dataspm,schaefer=FALSE,maxiter=1000)
 outfit(ansF)  # Fox model
}  
}
