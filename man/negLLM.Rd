% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spm.r
\name{negLLM}
\alias{negLLM}
\title{negLLM  -ve log-likelihood for normally distributed variables}
\usage{
negLLM(inp, indat, callfun, init = inp, pickparam = c(1:length(inp)),
  schaefer = TRUE)
}
\arguments{
\item{inp}{a vector containing the parameters being used in funk, plus
an extra sigma which is the standard deviation of the normal random
likelihoods in dnorm}

\item{indat}{the data set containing the 'year', 'catch', and 'cpue'}

\item{callfun}{the function that calculates the predicted values from
the input data}

\item{init}{this defaults to the same as pars - using all parameters}

\item{pickparam}{a vector identifying the parameters to be fitted; 
defaults to all parameters. If some need to be kept constant omit 
their index from pickparam.}

\item{schaefer}{a boolean that determines whether a Schaefer model (p=1)
is used or if FALSE the Fox model (p=1e-08).}
}
\value{
sum of the negative log-likelihoods using a normal PDF appled
    to the log transformed CPUE.
}
\description{
A generalized functions for calculating the negative
   log-likelihood for normally distributed variables. It uses an input
   function 'funk' that will calculate predicted values of a dependent
   variable from a vector of independent values. A penalty is placed on
   the r parameter to prevent it becoming negative.
}
\examples{
\dontrun{
data(dataspm)
dataspm
colnames(dataspm) <- tolower(colnames(dataspm))
pars <- c(r=0.2,K=6000,Binit=2800)
negLLM(pars,dataspm,simpspm,schaefer=FALSE)  # = -0.8884016
negLLM(pars,dataspm,simpspm)  # should be -11.12203
}
}
