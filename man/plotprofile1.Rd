% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotfuns.R
\name{plotprofile1}
\alias{plotprofile1}
\title{plotprofile1 simplifies plotting single likelihood profiles}
\usage{
plotprofile1(prof, var, digit = c(3, 3, 3), xlabel = getname(var),
  ylabel = "-ve Log-Likelihood", like = "-veLL")
}
\arguments{
\item{prof}{the results from teh likelihood profile calculations. This 
matrix should include, as a minimum, the fixed variable of interest 
and the matching -ve log-likelihood in named columns.}

\item{var}{the name of the variable of interest to identify the column
in prof in which to find the vector of fixed values given.}

\item{digit}{this is a vector of three that determine by how much the
round function limits the values printed of the 95% and mean at the 
top of the plot.}

\item{xlabel}{the x-axis label, defaults to the name of the var}

\item{ylabel}{the y-axis label, defaults to -ve Log-Likelihood}

\item{like}{identifies the name of the column containing the -ve log-
likelihood}
}
\value{
nothing but this does generate a plot.
}
\description{
plotprofile1 simplifies plotting out the likelihood 
    profiles of single parameters or variables. It is necessary to pass
    the function the output from the profile calculations, identifying
    the variable name against which to plot the likelihood. Identifying 
    the name of the -ve log-likelihood column. Facilities are provided
    for defining the x and y axis labels
}
\examples{
\dontrun{
data(abdat)
fish <- abdat$fish
simpspmP <- function(pars, indat,initpar,notfixed=c(1:length(pars)),
                     schaefer=TRUE,depleted=TRUE,
                     year="year",cats="catch",index="cpue") { 
  nyrs <- length(indat[,year])
  biom <- numeric(nyrs+1)
  catch <- indat[,cats]
  param <- initpar
  param[notfixed] <- pars[notfixed] 
  ep <- exp(param) 
  biom[1] <- ep[2]  
  if (depleted) biom[1] <- ep[3] 
  if(schaefer) p <- 1 else p <- 1e-8
  for (yr in 1:nyrs) { 
    Bt <- biom[yr]  
    biom[yr+1] <- max(Bt + ((ep[1]/p)*Bt*(1-(Bt/ep[2])^p)-catch[yr]),10)
  }
  qval <- exp(mean(log(indat[,"cpue"]/biom[1:nyrs])))
  return(log(biom[1:nyrs] * qval))  
} 
negLLP <- function(pars, funk, indat, logobs, initpar=pars,
                   notfixed=c(1:length(pars))) {
  logpred <- funk(pars,indat,initpar,notfixed)
  LL <- -sum(dnorm(logobs,logpred,exp(tail(pars,1)),log=T))
  return(LL)
}
rval <- seq(0.325,0.45,0.001)
ntrial <- length(rval)
columns <- c("r","K","Binit","sigma","-veLL")
result <- matrix(0,nrow=ntrial,ncol=length(columns),
                 dimnames=list(rval,columns))
bestest <- c(r= 0.32,K=11000,Binit=4000,sigma=0.05) 
for (i in 1:ntrial) {  #i <- 1
  param <- log(c(rval[i],bestest[2:4])) 
  parinit <- param    
  bestmodP <- nlm(f=negLLP,p=param,funk=simpspmP,initpar=parinit,
                  indat=fish,logobs=log(fish$cpue),notfixed=c(2:4),
                  typsize=magnitude(param),iterlim=1000)
  bestest <- exp(bestmodP$estimate)
  result[i,] <- c(bestest,bestmodP$minimum)
}
minLL <- min(result[,"-veLL"])
head(result,20)  # now plot -veLL agsinst r
}
}
